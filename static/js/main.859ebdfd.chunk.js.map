{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["StudentCard","props","handleOnChange","event","value","target","setState","prevState","tagText","handleKeyDown","key","onTag","item","state","isActive","this","avg","grades","map","grade","Number","reduce","sum","length","toFixed","className","src","pic","alt","firstName","lastName","onClick","email","company","skill","index","tags","tag","placeholder","onChange","onKeyDown","Component","App","handleChange","items","word","toLowerCase","result","filter","indexOf","searchResults","searchText","handleOnChangeTag","searchTag","addTags","student","newItems","id","push","isLoaded","fetch","then","res","json","students","isResultByNameEmpty","findIndex","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.859ebdfd.chunk.js","sourcesContent":["import './App.css';\r\nimport React, {Component} from 'react';\r\n\r\nclass StudentCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isActive: false,\r\n            tagText: ''\r\n        }\r\n    }\r\n\r\n    handleOnChange = (event) => {\r\n        const {target: {value}} = event;\r\n\r\n        this.setState((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                tagText: value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleKeyDown = (event) => {\r\n        const {target: {value}} = event;\r\n        if (event.key === 'Enter') {\r\n            this.props.onTag(value, this.props.item);\r\n            this.setState({tagText: ''})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {isActive, tagText} = this.state;\r\n        const {item} = this.props;\r\n        const total = item.grades.map(grade => Number(grade)).reduce((sum, grade) => (sum + grade));\r\n        //average rounded to 2 fractions\r\n        const avg = (total / item.grades.length).toFixed(2);\r\n\r\n\r\n        return <div className=\"StudentCard\">\r\n            <div className=\"StudentImg\">\r\n                <img src={this.props.item.pic} alt={`${this.props.item.firstName} ${this.props.item.lastName}`}/>\r\n            </div>\r\n            <div className=\"StudentInfoWrapper\">\r\n                <div className=\"StudentTitle\">\r\n                    <div>\r\n                        <h2>{this.props.item.firstName} {this.props.item.lastName}</h2>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={() => {\r\n                            this.setState({isActive: !isActive})\r\n                        }}>\r\n                            <h2>{isActive ? \"-\" : \"+\"}</h2>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"StudentInfo\">\r\n                    <p>Email : {this.props.item.email}</p>\r\n                    <p>Company : {this.props.item.company}</p>\r\n                    <p>Skill : {this.props.item.skill}</p>\r\n                    <p>Average: {avg}%</p>\r\n                    {isActive &&\r\n                    <div className=\"StudentExpansionList\">\r\n                        {\r\n                            item.grades.map((grade, index) => {\r\n                                return <p key={index}>Test {index + 1}:<span/> {grade}%</p>\r\n                            })\r\n                        }\r\n                    </div>\r\n                    }\r\n                    {/* tags goes here*/}\r\n                    {item.tags && item.tags.length > 0 &&\r\n                    <div className=\"StudentTags\">\r\n                        {item.tags.map(tag => <p>{tag}</p>)}\r\n                    </div>\r\n                    }\r\n                    <div>\r\n                        <input placeholder=\"Add a tag\" value={tagText}\r\n                               onChange={this.handleOnChange}\r\n                               onKeyDown={this.handleKeyDown}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>;\r\n    }\r\n\r\n\r\n}\r\n\r\nclass App extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: [],\r\n            isLoaded: false,\r\n            searchResults: [],\r\n            searchText: '',\r\n            searchTag: '',\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        fetch('https://api.hatchways.io/assessment/students')\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    items: json.students,\r\n                })\r\n            });\r\n\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        const {items} = this.state;\r\n        const word = event.target.value.toLowerCase();\r\n        const result = items.filter(item => {\r\n            return item.firstName.toLowerCase().indexOf(word) > -1 || item.lastName.toLowerCase().indexOf(word) > -1;\r\n        })\r\n\r\n        this.setState((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                searchResults: result,\r\n                searchText: word\r\n            }\r\n        })\r\n    }\r\n    handleOnChangeTag = (event) => {\r\n        const {target: {value}} = event;\r\n\r\n        this.setState((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                searchTag: value\r\n            }\r\n        })\r\n    }\r\n\r\n    addTags = (tag, student) => {\r\n\r\n        const {items} = this.state;\r\n\r\n        const newItems = items.map(item => {\r\n            if (item.id === student.id) {\r\n                // initialise tags\r\n                const tags = item.tags ? item.tags : [];\r\n                tags.push(tag);\r\n                return {...item, tags: tags}\r\n            }\r\n\r\n            return item;\r\n        })\r\n\r\n        this.setState((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                items: newItems\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {isLoaded, items, searchResults, searchText, searchTag} = this.state;\r\n\r\n        let students = searchResults.length > 0 ? searchResults : items;\r\n        const isResultByNameEmpty = searchResults.length === 0 && searchText;\r\n\r\n        if (searchTag)\r\n            students = students.filter(student => {\r\n                if (!student.tags)\r\n                    return false;\r\n                return student.tags.findIndex((tag) => tag.toLowerCase().indexOf(searchTag.toLowerCase()) > -1) > -1;\r\n            })\r\n\r\n\r\n        if (!isLoaded) {\r\n            return <div>Loading</div>\r\n        } else {\r\n\r\n            return (\r\n                <div className=\"App\">\r\n\r\n                    <div className=\"StudentCardContainer\">\r\n                        <input type=\"text\" placeholder=\"Search by name\"\r\n                               onChange={this.handleChange}/>\r\n                        <input type=\"text\" placeholder=\"Search by tag\"\r\n                               onChange={this.handleOnChangeTag}/>\r\n                        <div className=\"ScrollingContainer\">\r\n                            {students.length > 0 && !isResultByNameEmpty ? students.map(item => (\r\n                                <StudentCard key={item.id} item={item} onTag={this.addTags}/>\r\n                            )) : <p className=\"NoResults\"> No results\r\n                                for {searchText && searchTag ? <>\r\n                                    <span>{searchText} </span>and <span>{searchTag}</span>\r\n                                </> : searchTag ?\r\n                                    <span>{searchTag} </span> : <span>{searchText}</span>} </p>}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}